<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Answer;
use Symfony\Component\HttpFoundation\Request;

/**
 * QuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends \Doctrine\ORM\EntityRepository
{
    public function survey($project_id){
        $list = [];
        $config = [];
        $em = $this->getEntityManager();
        $configuration = $em->getRepository("AppBundle:Configuration")
            ->createQueryBuilder('c')
            ->where('c.project_id = :project_id')
            ->setParameters(['project_id' => $project_id])
            ->getQuery()
            ->getResult();
        foreach ($configuration as $index => $item) {
            $config[$item->getId()] = $item->getName();
        }
        $question = $em->getRepository("AppBundle:Question")
            ->createQueryBuilder('q')
            ->where('q.project_id = :project_id')
            ->setParameters(['project_id' => $project_id])
            ->getQuery()
            ->getResult();
        foreach($question as $val){
            $car_ids = explode(',',$val->getCarId());
            $question_id = $val->getId();
            $cars = [];
            foreach ($car_ids as $k => $car_id){
                $car = $em->getRepository("AppBundle:Car")
                    ->createQueryBuilder('c')
                    ->where('c.id = :id')
                    ->setParameters(['id' => $car_id])
                    ->getQuery()
                    ->getResult();
                $brand_id = $car[0]->getBrandId();
                $carInfo = $car[0]->getImg();
                $brand = $em->getRepository("AppBundle:Brand")
                    ->createQueryBuilder('b')
                    ->where('b.id = :id')
                    ->setParameters(['id' => $brand_id])
                    ->getQuery()
                    ->getResult();
                $brand_name = $brand[0]->getBrand();
                $brand_img = $brand[0]->getImg();
                $relation = $em->getRepository("AppBundle:Relation")
                    ->createQueryBuilder('r')
                    ->where('r.car_id = :car_id')
                    ->setParameters(['car_id' => $car_id])
                    ->getQuery()
                    ->getResult();
                $_config = [];
                foreach ($relation as $i => $v){
                    $_config['content'][] = $config[$v->getConfigId()]."ï¼š".$v->getVal();
                    $_config['val'][] = $v->getVal();
                }
                $cars[] = [
                    'index' => $k + 1,
                    'brand_name' => $brand_name,
                    'brand_img' => $brand_img,
                    'config' => $_config,
                    'car_info' => $carInfo,
                ];
            }
            $item = ['question_id' => $question_id,'cars' => $cars];
            $list[] = $item;
        }
        return $list;
    }

    public function getCities($project_id)
    {
        $em = $this->getEntityManager();
        return $em->getRepository("AppBundle:City")
            ->createQueryBuilder('c')
            ->where('c.project_id = :project_id')
            ->setParameters(['project_id' => $project_id])
            ->getQuery()
            ->getResult();
    }

    public function save(){
        $request = Request::createFromGlobals();
        $no = $request->request->get('no');
        $city = $request->request->get('city');
        $project_id = $request->request->get('project_id');
        $json = $request->request->get('json');
        $answer = new Answer();
        $answer->setProjectId($project_id);
        $answer->setCity($city);
        $answer->setRespondentNo($no);
        $answer->setAnswer($json);
        $em = $this->getEntityManager();
        $em->persist($answer);
        $em->flush();
        return [];
    }
}
